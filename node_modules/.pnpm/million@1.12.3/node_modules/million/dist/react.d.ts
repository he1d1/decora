import * as packages_jsx_runtime from 'packages/jsx-runtime';
import { V as VNode, D as DOMNode, b as VProps, k as Component, P as PureComponent, f as DeltaTypes } from './types-0de902a1.js';
export { m as Children, k as Component, P as PureComponent, S as StrictMode, n as Suspense, o as SuspenseList, p as cloneElement, q as createContext, r as createElement, s as createRef, t as forwardRef, l as hook, u as isValidElement, v as lazy, w as memo, o as unstable_SuspenseList, B as unstable_useDeferredValue, Q as unstable_useMutableSource, X as unstable_useTransition, y as useCallback, z as useContext, A as useDebugValue, B as useDeferredValue, M as useDelta, G as useEffect, x as useId, I as useImperativeHandle, G as useInsertionEffect, K as useLayoutEffect, N as useList, L as useMemo, Q as useMutableSource, T as useReducer, U as useRef, W as useState, Q as useSyncExternalStore, X as useTransition } from './types-0de902a1.js';
export { s as flushSync, s as startTransition, s as unstable_startTransition } from './scheduler-32bef9ad.js';
export { F as Fragment, j as jsx, j as jsxDEV, j as jsxs } from './jsx-16b112c3.js';

declare const hydrateRoot: (vnode: VNode, root: HTMLElement) => HTMLElement;
declare const createRoot: (root: DOMNode) => {
    render: (vnode?: VNode | VNode[] | null) => void;
    hydrate: (vnode?: VNode | VNode[] | null) => void;
    unmount: () => void;
};
declare const render: (vnode: VNode | VNode[], root: DOMNode) => void;
declare const createPortal: (children: VNode[], el: HTMLElement) => void;

declare const getCircularReplacer: () => (_key: any, value: any) => any;
declare const createComponent: (fn: Function, props?: VProps, key?: string | null) => any;
declare const createClass: (klass: typeof Component, props?: VProps) => any;
declare const compat: <T>(jsxFactoryRaw: Function) => T;

declare const version = "18.1.0";
declare const _default: {
    getCircularReplacer: () => (_key: any, value: any) => any;
    createComponent: (fn: Function, props?: VProps | undefined, key?: string | null | undefined) => any;
    createClass: (klass: typeof Component, props?: VProps | undefined) => any;
    compat: <T>(jsxFactoryRaw: Function) => T;
    render: (vnode: VNode | VNode[], root: DOMNode) => void;
    createPortal: (children: VNode[], el: HTMLElement) => void;
    createRoot: (root: DOMNode) => {
        render: (vnode?: VNode | VNode[] | null | undefined) => void;
        hydrate: (vnode?: VNode | VNode[] | null | undefined) => void;
        unmount: () => void;
    };
    hydrateRoot: (vnode: VNode, root: HTMLElement) => HTMLElement;
    flushSync: (work: () => void) => void;
    hook: (fn: any, catchError: any) => () => any;
    Children: {
        map: (children: VNode[] | null, fn: (this: VNode) => VNode) => VNode[] | null;
        forEach: (children: VNode[] | null, fn: (this: VNode) => VNode) => VNode[] | null;
        count(children: VNode[] | null): number;
        only(children: VNode[]): VNode | undefined;
        toArray: (children: VNode[]) => VNode[];
    };
    Component: typeof Component;
    Fragment: (props?: VProps | undefined) => VNode[] | undefined;
    PureComponent: typeof PureComponent;
    StrictMode: (props: {
        children: VNode[];
    }) => VNode[];
    Suspense: (props: {
        fallback: VNode;
        children: VNode[];
    }) => VNode[];
    SuspenseList: (props: {
        fallback: VNode;
        children: VNode[];
    }) => VNode[];
    unstable_SuspenseList: (props: {
        fallback: VNode;
        children: VNode[];
    }) => VNode[];
    cloneElement: (vnode: VNode) => VNode | VNode[];
    createContext: (value: any) => {
        value: any;
        Provider: ({ value }: {
            value: any;
        }) => any;
        Consumer: () => any;
    };
    createElement: unknown;
    createRef: () => {
        current: null;
    };
    forwardRef: (fn: Function) => (props: VProps) => any;
    isValidElement: (vnode?: VNode | null | undefined) => boolean;
    lazy: (loader: () => Promise<packages_jsx_runtime.FC>) => (props: VProps) => VNode | VNode[];
    memo: (component: (...args: unknown[]) => VNode) => () => (props: VProps) => VNode;
    startTransition: (work: () => void) => void;
    unstable_startTransition: (work: () => void) => void;
    useId: () => any;
    useCallback: (fn: any, guards?: any) => any;
    useContext: (context: any) => any;
    useDebugValue: (value: any) => void;
    useDeferredValue: (value: any) => any;
    unstable_useDeferredValue: (value: any) => any;
    useEffect: (effect: any, guards?: any) => void;
    useImperativeHandle: (ref: any, create: any) => void;
    useInsertionEffect: (effect: any, guards?: any) => void;
    useLayoutEffect: (effect: any, guards?: any) => void;
    useMemo: (memo: any, guards?: any) => any;
    useDelta: () => DeltaTypes[] & {
        create: (index: number) => void;
        update: (index: number) => void;
        delete: (index: number) => void;
    };
    useList: (array: any[]) => any[];
    useMutableSource: (subscribe: any, getSnapshot: any) => any;
    unstable_useMutableSource: (subscribe: any, getSnapshot: any) => any;
    useReducer: <T_1>(reducer: any, value: any, init?: any, options?: any) => any[];
    useRef: (value?: any) => any;
    useState: <T_2>(value?: T_2 | undefined, options?: any) => any[];
    useSyncExternalStore: (subscribe: any, getSnapshot: any) => any;
    useTransition: () => ((work: () => void) => void)[];
    unstable_useTransition: () => ((work: () => void) => void)[];
    jsx: unknown;
    jsxs: unknown;
    jsxDEV: unknown;
    version: string;
};

export { compat, createClass, createComponent, createPortal, createRoot, _default as default, getCircularReplacer, hydrateRoot, render, version };
